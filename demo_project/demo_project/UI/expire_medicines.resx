<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAPASURBVFhH7ZfZ
        TxNBHMf5C3wzMUajD5hYQ0StUigCoSZUtAYE24CiiAfEIPEoirdoVNREQBAaiVJuAYlGvPBCovFW8Fa0
        ovGBRIMPJmCwjXz9TXeWbreLtHi8yDf5Pux0Zr+f+c3s7NYPXqqjowN9fX38SlB8PeC3FQgo5g1D0KAA
        PT090Gg0UKlU8Pf3R0N9nbN9fD4N3kTOJm8jb3E2+6xfAnR3d0OtViMwMBBmsxnaEA1mBozFyJweIXSX
        xNvJWXygDxoQwG63IyIiwjnzvLw8Z9u3zlfwW/XaPVj0EKugCNDb2wuDwYCoqChYLBbeCkygtfbbwQOl
        ZrMnD0WKADExMdDr9bBarbwFGJNLnTfzQF/CP38F6u8AW08A7Z280SUPAJvNBp1Oh5ycHN4CJF4ERhyi
        zkrrrhT+5ANQ1AQk0E417AcW0GATLWP0Pt7BJQ8Ah8OB8PBwxM+Phb3rIxIvAZMrAd0pqsIRGiBCKIWf
        vgdE7QFiD1IglSypAFhCg0TP3ss7uqS4BGcbzyAmUoPAvHaoa4FQevKY+yHY46c0cz2FJxW6h0o9x4sK
        iJpb142gk65w0WHUNq6Id5JrFlEZD5CpAkqOpPLJpAhgPAdMrfEM19A+CiJfegc02YDGdpcv0LIfrOhE
        bu2nAb37uBebML2ZjtYK5fBgWo6yx8DxNuDoI3dbqS3tCpBxbWAvOs8S3I9zD4DRJYBWsu7MQVQNMdzK
        AeSueAKspo2/niAG8tJGHiKRB4CeNpq62hU+ncIjGzzDrc+AUgoVr6ue0yyvSgJpxubrkmtvAX5QhaZU
        ATMomIWzNWcqfggcaxXCyijsQEMbim58cUKUPqXH/soHLLe+hJmWkIVnnO7CiuLbyGzxEUDUpHJgGlVC
        VMF9DkBVYIFzwtVISctAJW3AKtqQprh5CJ2mQtZdYOMt+t2YjJCJo4RwXhmfAOSSAhyjKsRG67Ai3YzK
        NwLAwgQjwoLVyKKzaONteowTViJMrcK6i/Z/BWByAzAkpgoATcMAwwDDAP8PgOwg+qsArX0w6EKQkpre
        D2CKM0DLjmIOEB2/GNqAcXQSfv8zAIdFAJp9xStgbXY+9lbfgpVeTGUvgJ2WUzBuLkHmDeEtuKywBXGr
        dmDDTSGcOfl3AIoeuACYywmChYvXNa+BNZLXL4OQhq+7TFBn+c0k8hrgwlvAQq9kMVDuwT5I0unTnlVR
        Lq8B2IdUId2AQUgrMRgAmzkLZ7N3/BDuJZXXAKKa3wtfRnIIJQAWnkkbkPWX/bPnAn4C+cSb54WlDXgA
        AAAASUVORK5CYII=
</value>
  </data>
</root>